server:
  port: 8000
  # 全局请求前缀
  servlet:
    context-path: /api
spring:
  application:
    name: picture-cloud-backend
  profiles:
    active: local
  # 数据源配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/picture_cloud?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: root
  # Redis 配置
  redis:
    database: 0
    host: localhost
    port: 6379
    timeout: 5000
  session:
    # 表示从Redis中读写Session
    store-type: redis     # 默认为none 表示存储在单台服务器
  # RabbitMQ 配置
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /

  # 文件上传开放更大的体积
  servlet:
    multipart:
      max-file-size: 10MB

  # 分库分表配置
  shardingsphere:
    datasource:
      names: picture_cloud
      picture_cloud:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/picture_cloud?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
        username: root
        password: root
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: picture_cloud.picture   # 动态分表（此处是指系统可用的分表）
            table-strategy:
              standard:
                sharding-column: space_id # 分表字段
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.by.cloud.common.sharding.PictureShardingAlgorithm  # 算法类路径
    props:
      sql-show: true

# mybatis-plus 配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    # 仅在开发环境开启日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete
      logic-delete-value: 1
      logic-not-delete-value: 0
    enable-sql-runner: true
# knife4j 配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.by.cloud.controller
# 用户密码加密盐值
user:
  encrypt:
    salt: picture_cloud